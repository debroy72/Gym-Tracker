{"ast":null,"code":"var _jsxFileName = \"/Users/debkumarroy/gym-tracker/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport WorkoutSelector from \"../components/WorkoutSelector\";\nimport WorkoutList from \"../components/WorkoutList\";\nimport WorkoutHistory from \"../components/WorkoutHistory\";\nimport { saveProgress, loadProgress } from \"../utils/localStorageHelper\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [selectedWorkout, setSelectedWorkout] = useState(\"\");\n  const [workoutData, setWorkoutData] = useState({});\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    const savedData = loadProgress();\n    if (selectedWorkout) {\n      setWorkoutData(savedData[selectedWorkout] || {});\n    }\n    setHistory(savedData.history || []);\n  }, [selectedWorkout]);\n\n  // ‚úÖ Fix: Ensure weight and reps update correctly in state\n  const updateExerciseData = (exercise, field, value) => {\n    setWorkoutData(prev => ({\n      ...prev,\n      [exercise]: {\n        ...prev[exercise],\n        [field]: value !== \"\" ? String(value) : \"0\" // Convert value to string to avoid undefined\n      }\n    }));\n  };\n\n  // ‚úÖ Fix: Save latest workoutData instead of relying on async state updates\n  const saveWorkout = () => {\n    const date = new Date().toLocaleDateString();\n\n    // Ensure latest values before saving\n    const cleanedExercises = {};\n    Object.keys(workoutData).forEach(exercise => {\n      var _workoutData$exercise, _workoutData$exercise2, _workoutData$exercise3;\n      cleanedExercises[exercise] = {\n        completed: ((_workoutData$exercise = workoutData[exercise]) === null || _workoutData$exercise === void 0 ? void 0 : _workoutData$exercise.completed) || false,\n        reps: ((_workoutData$exercise2 = workoutData[exercise]) === null || _workoutData$exercise2 === void 0 ? void 0 : _workoutData$exercise2.reps) || \"0\",\n        weight: ((_workoutData$exercise3 = workoutData[exercise]) === null || _workoutData$exercise3 === void 0 ? void 0 : _workoutData$exercise3.weight) || \"0\"\n      };\n    });\n    const updatedHistory = [{\n      date,\n      workout: selectedWorkout,\n      exercises: cleanedExercises\n    }, ...history];\n    const allProgress = loadProgress();\n    allProgress.history = updatedHistory;\n    saveProgress(allProgress);\n    setHistory(updatedHistory);\n    alert(\"Workout Saved! üéâ\");\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDFCB\\uFE0F\\u200D\\u2642\\uFE0F Gym Workout Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WorkoutSelector, {\n      selectedWorkout: selectedWorkout,\n      setSelectedWorkout: setSelectedWorkout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WorkoutList, {\n      selectedWorkout: selectedWorkout,\n      workoutData: workoutData,\n      updateExerciseData: updateExerciseData,\n      saveWorkout: saveWorkout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WorkoutHistory, {\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"q76iE89UNt6WBDGGnySsUJ4igh8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","WorkoutSelector","WorkoutList","WorkoutHistory","saveProgress","loadProgress","motion","jsxDEV","_jsxDEV","Dashboard","_s","selectedWorkout","setSelectedWorkout","workoutData","setWorkoutData","history","setHistory","savedData","updateExerciseData","exercise","field","value","prev","String","saveWorkout","date","Date","toLocaleDateString","cleanedExercises","Object","keys","forEach","_workoutData$exercise","_workoutData$exercise2","_workoutData$exercise3","completed","reps","weight","updatedHistory","workout","exercises","allProgress","alert","div","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/debkumarroy/gym-tracker/src/pages/Dashboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport WorkoutSelector from \"../components/WorkoutSelector\";\nimport WorkoutList from \"../components/WorkoutList\";\nimport WorkoutHistory from \"../components/WorkoutHistory\";\nimport { saveProgress, loadProgress } from \"../utils/localStorageHelper\";\nimport { motion } from \"framer-motion\";\n\nconst Dashboard = () => {\n  const [selectedWorkout, setSelectedWorkout] = useState(\"\");\n  const [workoutData, setWorkoutData] = useState({});\n  const [history, setHistory] = useState([]);\n\n  useEffect(() => {\n    const savedData = loadProgress();\n    if (selectedWorkout) {\n      setWorkoutData(savedData[selectedWorkout] || {});\n    }\n    setHistory(savedData.history || []);\n  }, [selectedWorkout]);\n\n  // ‚úÖ Fix: Ensure weight and reps update correctly in state\n  const updateExerciseData = (exercise, field, value) => {\n    setWorkoutData((prev) => ({\n      ...prev,\n      [exercise]: {\n        ...prev[exercise],\n        [field]: value !== \"\" ? String(value) : \"0\", // Convert value to string to avoid undefined\n      },\n    }));\n  };\n\n  // ‚úÖ Fix: Save latest workoutData instead of relying on async state updates\n  const saveWorkout = () => {\n    const date = new Date().toLocaleDateString();\n\n    // Ensure latest values before saving\n    const cleanedExercises = {};\n    Object.keys(workoutData).forEach((exercise) => {\n      cleanedExercises[exercise] = {\n        completed: workoutData[exercise]?.completed || false,\n        reps: workoutData[exercise]?.reps || \"0\",\n        weight: workoutData[exercise]?.weight || \"0\",\n      };\n    });\n\n    const updatedHistory = [\n      { date, workout: selectedWorkout, exercises: cleanedExercises },\n      ...history,\n    ];\n\n    const allProgress = loadProgress();\n    allProgress.history = updatedHistory;\n    saveProgress(allProgress);\n\n    setHistory(updatedHistory);\n    alert(\"Workout Saved! üéâ\");\n  };\n\n  return (\n    <motion.div className=\"dashboard\">\n      <h1>üèãÔ∏è‚Äç‚ôÇÔ∏è Gym Workout Tracker</h1>\n      <WorkoutSelector selectedWorkout={selectedWorkout} setSelectedWorkout={setSelectedWorkout} />\n      <WorkoutList\n        selectedWorkout={selectedWorkout}\n        workoutData={workoutData}\n        updateExerciseData={updateExerciseData}\n        saveWorkout={saveWorkout}\n      />\n      <WorkoutHistory history={history} />\n    </motion.div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}