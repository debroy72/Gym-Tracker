{"ast":null,"code":"import _objectSpread from\"/Users/debkumarroy/gym-tracker mobile version/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect}from\"react\";import WorkoutSelector from\"../components/WorkoutSelector\";import WorkoutList from\"../components/WorkoutList\";import WorkoutHistory from\"../components/WorkoutHistory\";import ProgressChart from\"../components/ProgressChart\";import{saveProgress,loadProgress}from\"../utils/localStorageHelper\";import{motion}from\"framer-motion\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=_ref=>{let{onLogout}=_ref;const[selectedWorkout,setSelectedWorkout]=useState(\"\");const[workoutData,setWorkoutData]=useState({});const[history,setHistory]=useState([]);const[showProgress,setShowProgress]=useState(false);// ‚úÖ Load saved progress on component mount & workout selection change\nuseEffect(()=>{const savedData=loadProgress();console.log(\"üìÇ Loaded Saved Data:\",savedData);if(selectedWorkout){const workoutEntries=savedData[selectedWorkout]||{};console.log(\"üîÑ Setting Workout Data for:\",selectedWorkout,workoutEntries);setWorkoutData(workoutEntries);}setHistory(savedData.history||[]);},[selectedWorkout]);// ‚úÖ Update Exercise Data & Ensure Values Persist Properly\nconst updateExerciseData=(exercise,field,value)=>{setWorkoutData(prev=>{const updatedData=_objectSpread(_objectSpread({},prev),{},{[exercise]:_objectSpread(_objectSpread({},prev[exercise]),{},{[field]:value!==\"\"?value:\"\"// Allow empty input\n})});console.log(\"‚úèÔ∏è Updated Workout Data:\",updatedData);return updatedData;});};// ‚úÖ Save Workout & Ensure Data is Stored Correctly\nconst saveWorkout=()=>{const date=new Date().toLocaleDateString();console.log(\"üíæ Saving Workout for Date:\",date);const cleanedExercises={};Object.keys(workoutData).forEach(exercise=>{var _workoutData$exercise,_workoutData$exercise2,_workoutData$exercise3,_workoutData$exercise4;cleanedExercises[exercise]={completed:((_workoutData$exercise=workoutData[exercise])===null||_workoutData$exercise===void 0?void 0:_workoutData$exercise.completed)||false,weight1:((_workoutData$exercise2=workoutData[exercise])===null||_workoutData$exercise2===void 0?void 0:_workoutData$exercise2.weight1)||\"\",// Allow empty input\nweight2:((_workoutData$exercise3=workoutData[exercise])===null||_workoutData$exercise3===void 0?void 0:_workoutData$exercise3.weight2)||\"\",weight3:((_workoutData$exercise4=workoutData[exercise])===null||_workoutData$exercise4===void 0?void 0:_workoutData$exercise4.weight3)||\"\"};});console.log(\"üìä Final Workout Data:\",cleanedExercises);const updatedHistory=[{date,workout:selectedWorkout,exercises:cleanedExercises},...history];const allProgress=loadProgress();allProgress.history=updatedHistory;allProgress[selectedWorkout]=cleanedExercises;saveProgress(allProgress);setHistory(updatedHistory);setWorkoutData(cleanedExercises);console.log(\"‚úÖ Final History Saved:\",updatedHistory);alert(\"Workout Saved! üéâ\");};// ‚úÖ Reset all workout history and progress\nconst resetProgress=()=>{if(window.confirm(\"Are you sure you want to reset all progress? This cannot be undone.\")){localStorage.clear();setHistory([]);setWorkoutData({});alert(\"All progress has been reset! üóëÔ∏è\");}};return/*#__PURE__*/_jsxs(motion.div,{className:\"dashboard\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83C\\uDFCB\\uFE0F\\u200D\\u2642\\uFE0F GYM WORKOUT TRACKER\"}),/*#__PURE__*/_jsx(\"button\",{className:\"logout-button\",onClick:onLogout,children:\"\\uD83D\\uDEAA Logout\"})]}),/*#__PURE__*/_jsx(WorkoutSelector,{selectedWorkout:selectedWorkout,setSelectedWorkout:setSelectedWorkout}),/*#__PURE__*/_jsx(WorkoutList,{selectedWorkout:selectedWorkout,workoutData:workoutData,updateExerciseData:updateExerciseData,saveWorkout:saveWorkout}),/*#__PURE__*/_jsx(WorkoutHistory,{history:history}),/*#__PURE__*/_jsx(\"button\",{className:\"progress-toggle\",onClick:()=>setShowProgress(!showProgress),children:showProgress?\"Hide Progress üìâ\":\"Show Progress üìà\"}),showProgress&&/*#__PURE__*/_jsx(ProgressChart,{}),/*#__PURE__*/_jsx(\"button\",{className:\"reset-button\",onClick:resetProgress,children:\"Reset Progress \\uD83D\\uDDD1\\uFE0F\"})]});};export default Dashboard;","map":{"version":3,"names":["useState","useEffect","WorkoutSelector","WorkoutList","WorkoutHistory","ProgressChart","saveProgress","loadProgress","motion","jsx","_jsx","jsxs","_jsxs","Dashboard","_ref","onLogout","selectedWorkout","setSelectedWorkout","workoutData","setWorkoutData","history","setHistory","showProgress","setShowProgress","savedData","console","log","workoutEntries","updateExerciseData","exercise","field","value","prev","updatedData","_objectSpread","saveWorkout","date","Date","toLocaleDateString","cleanedExercises","Object","keys","forEach","_workoutData$exercise","_workoutData$exercise2","_workoutData$exercise3","_workoutData$exercise4","completed","weight1","weight2","weight3","updatedHistory","workout","exercises","allProgress","alert","resetProgress","window","confirm","localStorage","clear","div","className","children","onClick"],"sources":["/Users/debkumarroy/gym-tracker mobile version/src/pages/Dashboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport WorkoutSelector from \"../components/WorkoutSelector\";\nimport WorkoutList from \"../components/WorkoutList\";\nimport WorkoutHistory from \"../components/WorkoutHistory\";\nimport ProgressChart from \"../components/ProgressChart\";\nimport { saveProgress, loadProgress } from \"../utils/localStorageHelper\";\nimport { motion } from \"framer-motion\";\n\nconst Dashboard = ({ onLogout }) => {\n  const [selectedWorkout, setSelectedWorkout] = useState(\"\");\n  const [workoutData, setWorkoutData] = useState({});\n  const [history, setHistory] = useState([]);\n  const [showProgress, setShowProgress] = useState(false);\n\n  // ‚úÖ Load saved progress on component mount & workout selection change\n  useEffect(() => {\n    const savedData = loadProgress();\n    console.log(\"üìÇ Loaded Saved Data:\", savedData);\n\n    if (selectedWorkout) {\n      const workoutEntries = savedData[selectedWorkout] || {};\n      console.log(\"üîÑ Setting Workout Data for:\", selectedWorkout, workoutEntries);\n      setWorkoutData(workoutEntries);\n    }\n    \n    setHistory(savedData.history || []);\n  }, [selectedWorkout]);\n\n  // ‚úÖ Update Exercise Data & Ensure Values Persist Properly\n  const updateExerciseData = (exercise, field, value) => {\n    setWorkoutData((prev) => {\n      const updatedData = {\n        ...prev,\n        [exercise]: {\n          ...prev[exercise], \n          [field]: value !== \"\" ? value : \"\", // Allow empty input\n        },\n      };\n\n      console.log(\"‚úèÔ∏è Updated Workout Data:\", updatedData);\n      return updatedData;\n    });\n  };\n\n  // ‚úÖ Save Workout & Ensure Data is Stored Correctly\n  const saveWorkout = () => {\n    const date = new Date().toLocaleDateString();\n    console.log(\"üíæ Saving Workout for Date:\", date);\n\n    const cleanedExercises = {};\n    Object.keys(workoutData).forEach((exercise) => {\n      cleanedExercises[exercise] = {\n        completed: workoutData[exercise]?.completed || false,\n        weight1: workoutData[exercise]?.weight1 || \"\", // Allow empty input\n        weight2: workoutData[exercise]?.weight2 || \"\",\n        weight3: workoutData[exercise]?.weight3 || \"\",\n      };\n    });\n\n    console.log(\"üìä Final Workout Data:\", cleanedExercises);\n\n    const updatedHistory = [\n      { date, workout: selectedWorkout, exercises: cleanedExercises },\n      ...history,\n    ];\n\n    const allProgress = loadProgress();\n    allProgress.history = updatedHistory;\n    allProgress[selectedWorkout] = cleanedExercises;\n    saveProgress(allProgress);\n\n    setHistory(updatedHistory);\n    setWorkoutData(cleanedExercises);\n    console.log(\"‚úÖ Final History Saved:\", updatedHistory);\n    alert(\"Workout Saved! üéâ\");\n  };\n\n  // ‚úÖ Reset all workout history and progress\n  const resetProgress = () => {\n    if (window.confirm(\"Are you sure you want to reset all progress? This cannot be undone.\")) {\n      localStorage.clear();\n      setHistory([]);\n      setWorkoutData({});\n      alert(\"All progress has been reset! üóëÔ∏è\");\n    }\n  };\n\n  return (\n    <motion.div className=\"dashboard\">\n      <div className=\"dashboard-header\">\n        <h1>üèãÔ∏è‚Äç‚ôÇÔ∏è GYM WORKOUT TRACKER</h1>\n        <button className=\"logout-button\" onClick={onLogout}>üö™ Logout</button>\n      </div>\n\n      <WorkoutSelector selectedWorkout={selectedWorkout} setSelectedWorkout={setSelectedWorkout} />\n\n      <WorkoutList\n        selectedWorkout={selectedWorkout}\n        workoutData={workoutData}\n        updateExerciseData={updateExerciseData}\n        saveWorkout={saveWorkout}\n      />\n\n      <WorkoutHistory history={history} />\n\n      <button className=\"progress-toggle\" onClick={() => setShowProgress(!showProgress)}>\n        {showProgress ? \"Hide Progress üìâ\" : \"Show Progress üìà\"}\n      </button>\n\n      {showProgress && <ProgressChart />}\n\n      <button className=\"reset-button\" onClick={resetProgress}>Reset Progress üóëÔ∏è</button>\n    </motion.div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"kIAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,eAAe,KAAM,+BAA+B,CAC3D,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CACnD,MAAO,CAAAC,cAAc,KAAM,8BAA8B,CACzD,MAAO,CAAAC,aAAa,KAAM,6BAA6B,CACvD,OAASC,YAAY,CAAEC,YAAY,KAAQ,6BAA6B,CACxE,OAASC,MAAM,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvC,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC7B,KAAM,CAACE,eAAe,CAAEC,kBAAkB,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACkB,WAAW,CAAEC,cAAc,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAClD,KAAM,CAACoB,OAAO,CAAEC,UAAU,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACsB,YAAY,CAAEC,eAAe,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CAEvD;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAuB,SAAS,CAAGjB,YAAY,CAAC,CAAC,CAChCkB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEF,SAAS,CAAC,CAE/C,GAAIR,eAAe,CAAE,CACnB,KAAM,CAAAW,cAAc,CAAGH,SAAS,CAACR,eAAe,CAAC,EAAI,CAAC,CAAC,CACvDS,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAEV,eAAe,CAAEW,cAAc,CAAC,CAC5ER,cAAc,CAACQ,cAAc,CAAC,CAChC,CAEAN,UAAU,CAACG,SAAS,CAACJ,OAAO,EAAI,EAAE,CAAC,CACrC,CAAC,CAAE,CAACJ,eAAe,CAAC,CAAC,CAErB;AACA,KAAM,CAAAY,kBAAkB,CAAGA,CAACC,QAAQ,CAAEC,KAAK,CAAEC,KAAK,GAAK,CACrDZ,cAAc,CAAEa,IAAI,EAAK,CACvB,KAAM,CAAAC,WAAW,CAAAC,aAAA,CAAAA,aAAA,IACZF,IAAI,MACP,CAACH,QAAQ,EAAAK,aAAA,CAAAA,aAAA,IACJF,IAAI,CAACH,QAAQ,CAAC,MACjB,CAACC,KAAK,EAAGC,KAAK,GAAK,EAAE,CAAGA,KAAK,CAAG,EAAI;AAAA,EACrC,EACF,CAEDN,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEO,WAAW,CAAC,CACpD,MAAO,CAAAA,WAAW,CACpB,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAE,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAC5Cb,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEU,IAAI,CAAC,CAEhD,KAAM,CAAAG,gBAAgB,CAAG,CAAC,CAAC,CAC3BC,MAAM,CAACC,IAAI,CAACvB,WAAW,CAAC,CAACwB,OAAO,CAAEb,QAAQ,EAAK,KAAAc,qBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAC7CP,gBAAgB,CAACV,QAAQ,CAAC,CAAG,CAC3BkB,SAAS,CAAE,EAAAJ,qBAAA,CAAAzB,WAAW,CAACW,QAAQ,CAAC,UAAAc,qBAAA,iBAArBA,qBAAA,CAAuBI,SAAS,GAAI,KAAK,CACpDC,OAAO,CAAE,EAAAJ,sBAAA,CAAA1B,WAAW,CAACW,QAAQ,CAAC,UAAAe,sBAAA,iBAArBA,sBAAA,CAAuBI,OAAO,GAAI,EAAE,CAAE;AAC/CC,OAAO,CAAE,EAAAJ,sBAAA,CAAA3B,WAAW,CAACW,QAAQ,CAAC,UAAAgB,sBAAA,iBAArBA,sBAAA,CAAuBI,OAAO,GAAI,EAAE,CAC7CC,OAAO,CAAE,EAAAJ,sBAAA,CAAA5B,WAAW,CAACW,QAAQ,CAAC,UAAAiB,sBAAA,iBAArBA,sBAAA,CAAuBI,OAAO,GAAI,EAC7C,CAAC,CACH,CAAC,CAAC,CAEFzB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEa,gBAAgB,CAAC,CAEvD,KAAM,CAAAY,cAAc,CAAG,CACrB,CAAEf,IAAI,CAAEgB,OAAO,CAAEpC,eAAe,CAAEqC,SAAS,CAAEd,gBAAiB,CAAC,CAC/D,GAAGnB,OAAO,CACX,CAED,KAAM,CAAAkC,WAAW,CAAG/C,YAAY,CAAC,CAAC,CAClC+C,WAAW,CAAClC,OAAO,CAAG+B,cAAc,CACpCG,WAAW,CAACtC,eAAe,CAAC,CAAGuB,gBAAgB,CAC/CjC,YAAY,CAACgD,WAAW,CAAC,CAEzBjC,UAAU,CAAC8B,cAAc,CAAC,CAC1BhC,cAAc,CAACoB,gBAAgB,CAAC,CAChCd,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEyB,cAAc,CAAC,CACrDI,KAAK,CAAC,mBAAmB,CAAC,CAC5B,CAAC,CAED;AACA,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,GAAIC,MAAM,CAACC,OAAO,CAAC,qEAAqE,CAAC,CAAE,CACzFC,YAAY,CAACC,KAAK,CAAC,CAAC,CACpBvC,UAAU,CAAC,EAAE,CAAC,CACdF,cAAc,CAAC,CAAC,CAAC,CAAC,CAClBoC,KAAK,CAAC,kCAAkC,CAAC,CAC3C,CACF,CAAC,CAED,mBACE3C,KAAA,CAACJ,MAAM,CAACqD,GAAG,EAACC,SAAS,CAAC,WAAW,CAAAC,QAAA,eAC/BnD,KAAA,QAAKkD,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BrD,IAAA,OAAAqD,QAAA,CAAI,0DAA0B,CAAI,CAAC,cACnCrD,IAAA,WAAQoD,SAAS,CAAC,eAAe,CAACE,OAAO,CAAEjD,QAAS,CAAAgD,QAAA,CAAC,qBAAS,CAAQ,CAAC,EACpE,CAAC,cAENrD,IAAA,CAACR,eAAe,EAACc,eAAe,CAAEA,eAAgB,CAACC,kBAAkB,CAAEA,kBAAmB,CAAE,CAAC,cAE7FP,IAAA,CAACP,WAAW,EACVa,eAAe,CAAEA,eAAgB,CACjCE,WAAW,CAAEA,WAAY,CACzBU,kBAAkB,CAAEA,kBAAmB,CACvCO,WAAW,CAAEA,WAAY,CAC1B,CAAC,cAEFzB,IAAA,CAACN,cAAc,EAACgB,OAAO,CAAEA,OAAQ,CAAE,CAAC,cAEpCV,IAAA,WAAQoD,SAAS,CAAC,iBAAiB,CAACE,OAAO,CAAEA,CAAA,GAAMzC,eAAe,CAAC,CAACD,YAAY,CAAE,CAAAyC,QAAA,CAC/EzC,YAAY,CAAG,kBAAkB,CAAG,kBAAkB,CACjD,CAAC,CAERA,YAAY,eAAIZ,IAAA,CAACL,aAAa,GAAE,CAAC,cAElCK,IAAA,WAAQoD,SAAS,CAAC,cAAc,CAACE,OAAO,CAAER,aAAc,CAAAO,QAAA,CAAC,mCAAkB,CAAQ,CAAC,EAC1E,CAAC,CAEjB,CAAC,CAED,cAAe,CAAAlD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}