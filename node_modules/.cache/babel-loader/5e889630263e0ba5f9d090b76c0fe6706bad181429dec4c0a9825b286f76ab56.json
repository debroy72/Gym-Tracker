{"ast":null,"code":"var _jsxFileName = \"/Users/debkumarroy/gym-tracker/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport WorkoutSelector from \"../components/WorkoutSelector\";\nimport WorkoutList from \"../components/WorkoutList\";\nimport WorkoutHistory from \"../components/WorkoutHistory\";\nimport { saveProgress, loadProgress } from \"../utils/localStorageHelper\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  onLogout\n}) => {\n  _s();\n  const [selectedWorkout, setSelectedWorkout] = useState(\"\");\n  const [workoutData, setWorkoutData] = useState({});\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    const savedData = loadProgress();\n    if (selectedWorkout) {\n      setWorkoutData(savedData[selectedWorkout] || {});\n    }\n    setHistory(savedData.history || []);\n  }, [selectedWorkout]);\n\n  // ‚úÖ Fix: Ensure input updates correctly in local state\n  const updateExerciseData = (exercise, field, value) => {\n    setWorkoutData(prev => ({\n      ...prev,\n      [exercise]: {\n        ...prev[exercise],\n        [field]: value !== \"\" ? String(value) : \"0\" // Ensure no undefined values\n      }\n    }));\n  };\n\n  // ‚úÖ Fix: Sync `workoutData` before saving to ensure latest values are used\n  const saveWorkout = () => {\n    setWorkoutData(prevWorkoutData => {\n      const date = new Date().toLocaleDateString();\n      const cleanedExercises = {};\n      Object.keys(prevWorkoutData).forEach(exercise => {\n        var _prevWorkoutData$exer, _prevWorkoutData$exer2, _prevWorkoutData$exer3, _prevWorkoutData$exer4, _prevWorkoutData$exer5;\n        cleanedExercises[exercise] = {\n          completed: ((_prevWorkoutData$exer = prevWorkoutData[exercise]) === null || _prevWorkoutData$exer === void 0 ? void 0 : _prevWorkoutData$exer.completed) || false,\n          reps: ((_prevWorkoutData$exer2 = prevWorkoutData[exercise]) === null || _prevWorkoutData$exer2 === void 0 ? void 0 : (_prevWorkoutData$exer3 = _prevWorkoutData$exer2.reps) === null || _prevWorkoutData$exer3 === void 0 ? void 0 : _prevWorkoutData$exer3.toString()) || \"0\",\n          weight: ((_prevWorkoutData$exer4 = prevWorkoutData[exercise]) === null || _prevWorkoutData$exer4 === void 0 ? void 0 : (_prevWorkoutData$exer5 = _prevWorkoutData$exer4.weight) === null || _prevWorkoutData$exer5 === void 0 ? void 0 : _prevWorkoutData$exer5.toString()) || \"0\"\n        };\n      });\n      const updatedHistory = [{\n        date,\n        workout: selectedWorkout,\n        exercises: cleanedExercises\n      }, ...history];\n      const allProgress = loadProgress();\n      allProgress.history = updatedHistory;\n      saveProgress(allProgress);\n      setHistory(updatedHistory);\n      alert(\"Workout Saved! üéâ\");\n      return cleanedExercises; // Ensure the latest state is stored\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDFCB\\uFE0F\\u200D\\u2642\\uFE0F Gym Workout Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-button\",\n      onClick: onLogout,\n      children: \"\\uD83D\\uDEAA Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WorkoutSelector, {\n      selectedWorkout: selectedWorkout,\n      setSelectedWorkout: setSelectedWorkout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WorkoutList, {\n      selectedWorkout: selectedWorkout,\n      workoutData: workoutData,\n      updateExerciseData: updateExerciseData,\n      saveWorkout: saveWorkout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WorkoutHistory, {\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"q76iE89UNt6WBDGGnySsUJ4igh8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","WorkoutSelector","WorkoutList","WorkoutHistory","saveProgress","loadProgress","motion","jsxDEV","_jsxDEV","Dashboard","onLogout","_s","selectedWorkout","setSelectedWorkout","workoutData","setWorkoutData","history","setHistory","savedData","updateExerciseData","exercise","field","value","prev","String","saveWorkout","prevWorkoutData","date","Date","toLocaleDateString","cleanedExercises","Object","keys","forEach","_prevWorkoutData$exer","_prevWorkoutData$exer2","_prevWorkoutData$exer3","_prevWorkoutData$exer4","_prevWorkoutData$exer5","completed","reps","toString","weight","updatedHistory","workout","exercises","allProgress","alert","div","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/debkumarroy/gym-tracker/src/pages/Dashboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport WorkoutSelector from \"../components/WorkoutSelector\";\nimport WorkoutList from \"../components/WorkoutList\";\nimport WorkoutHistory from \"../components/WorkoutHistory\";\nimport { saveProgress, loadProgress } from \"../utils/localStorageHelper\";\nimport { motion } from \"framer-motion\";\n\nconst Dashboard = ({ onLogout }) => {\n  const [selectedWorkout, setSelectedWorkout] = useState(\"\");\n  const [workoutData, setWorkoutData] = useState({});\n  const [history, setHistory] = useState([]);\n\n  useEffect(() => {\n    const savedData = loadProgress();\n    if (selectedWorkout) {\n      setWorkoutData(savedData[selectedWorkout] || {});\n    }\n    setHistory(savedData.history || []);\n  }, [selectedWorkout]);\n\n  // ‚úÖ Fix: Ensure input updates correctly in local state\n  const updateExerciseData = (exercise, field, value) => {\n    setWorkoutData((prev) => ({\n      ...prev,\n      [exercise]: {\n        ...prev[exercise],\n        [field]: value !== \"\" ? String(value) : \"0\", // Ensure no undefined values\n      },\n    }));\n  };\n\n  // ‚úÖ Fix: Sync `workoutData` before saving to ensure latest values are used\n  const saveWorkout = () => {\n    setWorkoutData((prevWorkoutData) => {\n      const date = new Date().toLocaleDateString();\n\n      const cleanedExercises = {};\n      Object.keys(prevWorkoutData).forEach((exercise) => {\n        cleanedExercises[exercise] = {\n          completed: prevWorkoutData[exercise]?.completed || false,\n          reps: prevWorkoutData[exercise]?.reps?.toString() || \"0\",\n          weight: prevWorkoutData[exercise]?.weight?.toString() || \"0\",\n        };\n      });\n\n      const updatedHistory = [\n        { date, workout: selectedWorkout, exercises: cleanedExercises },\n        ...history,\n      ];\n\n      const allProgress = loadProgress();\n      allProgress.history = updatedHistory;\n      saveProgress(allProgress);\n\n      setHistory(updatedHistory);\n      alert(\"Workout Saved! üéâ\");\n\n      return cleanedExercises; // Ensure the latest state is stored\n    });\n  };\n\n  return (\n    <motion.div className=\"dashboard\">\n      <h1>üèãÔ∏è‚Äç‚ôÇÔ∏è Gym Workout Tracker</h1>\n      <button className=\"logout-button\" onClick={onLogout}>üö™ Logout</button>\n      <WorkoutSelector selectedWorkout={selectedWorkout} setSelectedWorkout={setSelectedWorkout} />\n      <WorkoutList\n        selectedWorkout={selectedWorkout}\n        workoutData={workoutData}\n        updateExerciseData={updateExerciseData}\n        saveWorkout={saveWorkout}\n      />\n      <WorkoutHistory history={history} />\n    </motion.div>\n  );\n};\n\nexport default Dashboard;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAASC,YAAY,EAAEC,YAAY,QAAQ,6BAA6B;AACxE,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMkB,SAAS,GAAGb,YAAY,CAAC,CAAC;IAChC,IAAIO,eAAe,EAAE;MACnBG,cAAc,CAACG,SAAS,CAACN,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IAClD;IACAK,UAAU,CAACC,SAAS,CAACF,OAAO,IAAI,EAAE,CAAC;EACrC,CAAC,EAAE,CAACJ,eAAe,CAAC,CAAC;;EAErB;EACA,MAAMO,kBAAkB,GAAGA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,KAAK;IACrDP,cAAc,CAAEQ,IAAI,KAAM;MACxB,GAAGA,IAAI;MACP,CAACH,QAAQ,GAAG;QACV,GAAGG,IAAI,CAACH,QAAQ,CAAC;QACjB,CAACC,KAAK,GAAGC,KAAK,KAAK,EAAE,GAAGE,MAAM,CAACF,KAAK,CAAC,GAAG,GAAG,CAAE;MAC/C;IACF,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBV,cAAc,CAAEW,eAAe,IAAK;MAClC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;MAE5C,MAAMC,gBAAgB,GAAG,CAAC,CAAC;MAC3BC,MAAM,CAACC,IAAI,CAACN,eAAe,CAAC,CAACO,OAAO,CAAEb,QAAQ,IAAK;QAAA,IAAAc,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;QACjDR,gBAAgB,CAACV,QAAQ,CAAC,GAAG;UAC3BmB,SAAS,EAAE,EAAAL,qBAAA,GAAAR,eAAe,CAACN,QAAQ,CAAC,cAAAc,qBAAA,uBAAzBA,qBAAA,CAA2BK,SAAS,KAAI,KAAK;UACxDC,IAAI,EAAE,EAAAL,sBAAA,GAAAT,eAAe,CAACN,QAAQ,CAAC,cAAAe,sBAAA,wBAAAC,sBAAA,GAAzBD,sBAAA,CAA2BK,IAAI,cAAAJ,sBAAA,uBAA/BA,sBAAA,CAAiCK,QAAQ,CAAC,CAAC,KAAI,GAAG;UACxDC,MAAM,EAAE,EAAAL,sBAAA,GAAAX,eAAe,CAACN,QAAQ,CAAC,cAAAiB,sBAAA,wBAAAC,sBAAA,GAAzBD,sBAAA,CAA2BK,MAAM,cAAAJ,sBAAA,uBAAjCA,sBAAA,CAAmCG,QAAQ,CAAC,CAAC,KAAI;QAC3D,CAAC;MACH,CAAC,CAAC;MAEF,MAAME,cAAc,GAAG,CACrB;QAAEhB,IAAI;QAAEiB,OAAO,EAAEhC,eAAe;QAAEiC,SAAS,EAAEf;MAAiB,CAAC,EAC/D,GAAGd,OAAO,CACX;MAED,MAAM8B,WAAW,GAAGzC,YAAY,CAAC,CAAC;MAClCyC,WAAW,CAAC9B,OAAO,GAAG2B,cAAc;MACpCvC,YAAY,CAAC0C,WAAW,CAAC;MAEzB7B,UAAU,CAAC0B,cAAc,CAAC;MAC1BI,KAAK,CAAC,mBAAmB,CAAC;MAE1B,OAAOjB,gBAAgB,CAAC,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC;EAED,oBACEtB,OAAA,CAACF,MAAM,CAAC0C,GAAG;IAACC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAC/B1C,OAAA;MAAA0C,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnC9C,OAAA;MAAQyC,SAAS,EAAC,eAAe;MAACM,OAAO,EAAE7C,QAAS;MAAAwC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvE9C,OAAA,CAACP,eAAe;MAACW,eAAe,EAAEA,eAAgB;MAACC,kBAAkB,EAAEA;IAAmB;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7F9C,OAAA,CAACN,WAAW;MACVU,eAAe,EAAEA,eAAgB;MACjCE,WAAW,EAAEA,WAAY;MACzBK,kBAAkB,EAAEA,kBAAmB;MACvCM,WAAW,EAAEA;IAAY;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACF9C,OAAA,CAACL,cAAc;MAACa,OAAO,EAAEA;IAAQ;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEjB,CAAC;AAAC3C,EAAA,CApEIF,SAAS;AAAA+C,EAAA,GAAT/C,SAAS;AAsEf,eAAeA,SAAS;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}